<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.szcti.lcloud.catalog.repository.AcceptanceRepository">
  <resultMap id="BaseResultMap" type="com.szcti.lcloud.catalog.entity.Acceptance">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="library_id" jdbcType="BIGINT" property="libraryId" />
    <result column="accept_code" jdbcType="VARCHAR" property="acceptCode" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="bill_no" jdbcType="VARCHAR" property="billNo" />
    <result column="total_price" jdbcType="VARCHAR" property="totalPrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, library_id, accept_code, status, creator, create_time, remark, bill_no, total_price
  </sql>
  <select id="selectByExample" parameterType="com.szcti.lcloud.catalog.entity.AcceptanceCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_acceptance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_acceptance
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_acceptance
    where id = #{id,jdbcType=BIGINT}
  </delete>
 <insert id="insert" parameterType="com.szcti.lcloud.catalog.entity.Acceptance">
    insert into t_acceptance (id, library_id, accept_code, 
      status, creator, create_time, 
      remark, bill_no, total_price
      )
    values (#{id,jdbcType=BIGINT}, #{libraryId,jdbcType=BIGINT}, #{acceptCode,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{creator,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR}, #{billNo,jdbcType=VARCHAR}, #{totalPrice,jdbcType=VARCHAR}
      )
  </insert>
<update id="updateByPrimaryKey" parameterType="com.szcti.lcloud.catalog.entity.Acceptance">
    update t_acceptance
    set library_id = #{libraryId,jdbcType=BIGINT},
      accept_code = #{acceptCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      bill_no = #{billNo,jdbcType=VARCHAR},
      total_price = #{totalPrice,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
 </mapper>