<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.szcti.lcloud.purchase.repository.OrderbatchBookRepository" >
  <resultMap id="BaseResultMap" type="com.szcti.lcloud.purchase.entity.OrderbatchBook" >
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_batch_id" jdbcType="BIGINT" property="orderBatchId" />
    <result column="purchase_book_id" jdbcType="BIGINT" property="purchaseBookId" />
    <result column="book_qty" jdbcType="INTEGER" property="bookQty" />
    <result column="checked_qty" jdbcType="INTEGER" property="checkedQty" />
    <result column="checker" jdbcType="BIGINT" property="checker" />
    <result column="check_time" jdbcType="TIMESTAMP" property="checkTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="checkmsg" jdbcType="VARCHAR" property="checkmsg" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_hand_in" jdbcType="VARCHAR" property="isHandIn" />
   </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_batch_id, purchase_book_id, book_qty, checked_qty, checker, check_time,
    status, checkmsg, remark
  </sql>
  <select id="selectByExample" parameterType="com.szcti.lcloud.purchase.entity.OrderbatchBookCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_orderbatch_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_orderbatch_book
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_orderbatch_book
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.szcti.lcloud.purchase.entity.OrderbatchBookCriteria">
    delete from t_orderbatch_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.szcti.lcloud.purchase.entity.OrderbatchBook">
    insert into t_orderbatch_book (id, order_batch_id, purchase_book_id,
      book_qty, checked_qty, checker,
      check_time, status, checkmsg,
      remark)
    values (#{id,jdbcType=BIGINT}, #{orderBatchId,jdbcType=BIGINT}, #{purchaseBookId,jdbcType=BIGINT},
      #{bookQty,jdbcType=INTEGER}, #{checkedQty,jdbcType=INTEGER}, #{checker,jdbcType=BIGINT},
      #{checkTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{checkmsg,jdbcType=VARCHAR},
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.szcti.lcloud.purchase.entity.OrderbatchBook">
    insert into t_orderbatch_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderBatchId != null">
        order_batch_id,
      </if>
      <if test="purchaseBookId != null">
        purchase_book_id,
      </if>
      <if test="bookQty != null">
        book_qty,
      </if>
      <if test="checkedQty != null">
        checked_qty,
      </if>
      <if test="checker != null">
        checker,
      </if>
      <if test="checkTime != null">
        check_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="checkmsg != null">
        checkmsg,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderBatchId != null">
        #{orderBatchId,jdbcType=BIGINT},
      </if>
      <if test="purchaseBookId != null">
        #{purchaseBookId,jdbcType=BIGINT},
      </if>
      <if test="bookQty != null">
        #{bookQty,jdbcType=INTEGER},
      </if>
      <if test="checkedQty != null">
        #{checkedQty,jdbcType=INTEGER},
      </if>
      <if test="checker != null">
        #{checker,jdbcType=BIGINT},
      </if>
      <if test="checkTime != null">
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="checkmsg != null">
        #{checkmsg,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.szcti.lcloud.purchase.entity.OrderbatchBookCriteria" resultType="java.lang.Long">
    select count(*) from t_orderbatch_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_orderbatch_book
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderBatchId != null">
        order_batch_id = #{record.orderBatchId,jdbcType=BIGINT},
      </if>
      <if test="record.purchaseBookId != null">
        purchase_book_id = #{record.purchaseBookId,jdbcType=BIGINT},
      </if>
      <if test="record.bookQty != null">
        book_qty = #{record.bookQty,jdbcType=INTEGER},
      </if>
      <if test="record.checkedQty != null">
        checked_qty = #{record.checkedQty,jdbcType=INTEGER},
      </if>
      <if test="record.checker != null">
        checker = #{record.checker,jdbcType=BIGINT},
      </if>
      <if test="record.checkTime != null">
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.checkmsg != null">
        checkmsg = #{record.checkmsg,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_orderbatch_book
    set id = #{record.id,jdbcType=BIGINT},
    order_batch_id = #{record.orderBatchId,jdbcType=BIGINT},
    purchase_book_id = #{record.purchaseBookId,jdbcType=BIGINT},
    book_qty = #{record.bookQty,jdbcType=INTEGER},
    checked_qty = #{record.checkedQty,jdbcType=INTEGER},
    checker = #{record.checker,jdbcType=BIGINT},
    check_time = #{record.checkTime,jdbcType=TIMESTAMP},
    status = #{record.status,jdbcType=VARCHAR},
    checkmsg = #{record.checkmsg,jdbcType=VARCHAR},
    remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.szcti.lcloud.purchase.entity.OrderbatchBook">
    update t_orderbatch_book
    <set>
      <if test="orderBatchId != null">
        order_batch_id = #{orderBatchId,jdbcType=BIGINT},
      </if>
      <if test="purchaseBookId != null">
        purchase_book_id = #{purchaseBookId,jdbcType=BIGINT},
      </if>
      <if test="bookQty != null">
        book_qty = #{bookQty,jdbcType=INTEGER},
      </if>
      <if test="checkedQty != null">
        checked_qty = #{checkedQty,jdbcType=INTEGER},
      </if>
      <if test="checker != null">
        checker = #{checker,jdbcType=BIGINT},
      </if>
      <if test="checkTime != null">
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="checkmsg != null">
        checkmsg = #{checkmsg,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.szcti.lcloud.purchase.entity.OrderbatchBook">
    update t_orderbatch_book
    set order_batch_id = #{orderBatchId,jdbcType=BIGINT},
      purchase_book_id = #{purchaseBookId,jdbcType=BIGINT},
      book_qty = #{bookQty,jdbcType=INTEGER},
      checked_qty = #{checkedQty,jdbcType=INTEGER},
      checker = #{checker,jdbcType=BIGINT},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      checkmsg = #{checkmsg,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      is_hand_in = #{isHandIn,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--自定义扩展-->
  <select id="queryPage" parameterType="com.szcti.lcloud.purchase.entity.vo.OrderbatchBookVO"
  resultType="com.szcti.lcloud.purchase.entity.vo.OrderbatchBookVO">
  select distinct pb.order_id,pb.title,pb.author,pb.book_type as bookType,pb.isbn,pb.publisher,pb.pubdate,pb.price,pb.book_qty as orderQty,
    por.purchase_code,por.order_code,por.rule_id,por.order_status,por.order_time,
    oba.coding,oba.supplier_id,oba.accept_status,oba.create_time,
  ob.* from t_orderbatch_book ob
  left join t_purchase_book pb on ob.purchase_book_id=pb.id
  left join t_order_batch oba on oba.id=ob.order_batch_id
  left join t_purchase_order por on por.id=pb.order_id
  where 1=1
    <if test="searchValue != null and searchValue != '' and searchKey=='title'">
      AND pb.title LIKE CONCAT('%',#{searchValue},'%')
    </if>
    <if test="searchValue != null and searchValue != '' and searchKey=='isbn'">
      AND pb.isbn LIKE CONCAT('%',#{searchValue},'%')
    </if>
    <if test="searchValue != null and searchValue != '' and searchKey=='author'">
      AND pb.author LIKE CONCAT('%',#{searchValue},'%')
    </if>
    <if test="searchValue != null and searchValue != '' and searchKey=='publisher'">
      AND pb.publisher LIKE CONCAT('%',#{searchValue},'%')
    </if>
  <if test="id != null">
    and ob.id=#{id}
  </if>
    <if test="libraryId != null">
      and ob.library_id=#{libraryId}
    </if>
  <if test="orderBatchId != null">
    and ob.order_batch_id=#{orderBatchId}
  </if>
  <if test="purchaseBookId != null">
    and ob.purchase_book_id=#{purchaseBookId}
  </if>
  <if test="bookQty != null">
    and ob.book_qty=#{bookQty}
  </if>
  <if test="checkedQty != null">
    and ob.checked_qty=#{checkedQty}
  </if>
  <if test="checker != null">
    and ob.checker=#{checker}
  </if>
  <if test="checkTime != null">
    and ob.check_time=#{checkTime}
  </if>
  <if test="status != null and status!=''">
    and ob.status=#{status}
  </if>
    <if test="isHandIn != null and isHandIn!=''">
      and ob.is_hand_in=#{isHandIn}
    </if>
  <if test="checkmsg != null and checkmsg!=''">
    and ob.checkmsg=#{checkmsg}
  </if>
  <if test="remark != null and remark!=''">
    and ob.remark LIKE CONCAT('%',#{remark},'%')
  </if>
  <if test="orderId != null">
    and por.order_id=#{orderId}
  </if>
  <if test="purchaseCode != null and purchaseCode!=''">
    and por.purchase_code=#{purchaseCode}
</if>
    <if test="orderCode != null and orderCode!=''">
      and por.order_code=#{orderCode}
    </if>
    <if test="ruleId != null">
      and por.rule_id=#{ruleId}
    </if>
    <if test="orderStatus != null and orderStatus !=''">
      and oba.order_status=#{orderStatus}
    </if>
    <if test="coding != null and coding !=''">
      and oba.coding=#{coding}
    </if>
    <if test="supplierId != null">
      and oba.supplier_id=#{supplierId}
    </if>
    <if test="acceptStatus != null and acceptStatus !=''">
      and oba.accept_status=#{acceptStatus}
    </if>
    <if test="startTime != null and startTime != '' and timeKey=='orderTime'">
      AND por.order_time >= #{startTime}
    </if>
    <if test="endTime != null and endTime != '' and timeKey=='orderTime'">
      AND por.order_time <![CDATA[<]]> #{endTime}
    </if>
    <if test="startTime != null and startTime != '' and timeKey=='checkTime'">
      AND obb.check_time >= #{startTime}
    </if>
    <if test="endTime != null and endTime != '' and timeKey=='checkTime'">
      AND obb.check_time <![CDATA[<]]> #{endTime}
    </if>
    <if test="startTime != null and startTime != '' and timeKey=='createTime'">
      AND oba.create_time >= #{startTime}
    </if>
    <if test="endTime != null and endTime != '' and timeKey=='createTime'">
      AND oba.create_time <![CDATA[<]]> #{endTime}
    </if>
    <if test="ids != null">
      AND ob.id in
      <foreach item="id" collection="ids" open="(" separator=", " close=")">
        #{id}
      </foreach>
    </if>
    <if test="statusList != null">
      AND ob.status in
      <foreach item="status" collection="statusList" open="(" separator=", " close=")">
        #{status}
      </foreach>
    </if>
    <if test="orderStatusList != null">
      AND por.order_status in
      <foreach item="orderStatus" collection="orderStatusList" open="(" separator=", " close=")">
        #{orderStatus}
      </foreach>
    </if>
    <if test="acceptStatusList != null">
      AND por.accept_status in
      <foreach item="acceptStatus" collection="acceptStatusList" open="(" separator=", " close=")">
        #{acceptStatus}
      </foreach>
    </if>
  </select>
</mapper>